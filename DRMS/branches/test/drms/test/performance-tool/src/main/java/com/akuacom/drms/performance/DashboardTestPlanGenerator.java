package com.akuacom.drms.performance;

/**
 * Generates simple dash board performance test plan
 * @author Sunil
 *
 */
public class DashboardTestPlanGenerator {
	/**
	 * New Line character
	 */
	public static String newline = System.getProperty("line.separator");

	
	/**
	 * Adds new line character to the end of the string
	 * @param text string
	 * @return new line appended string
	 */
	private String createNewLine(String text){
		return text + newline;
	}
	
	
	public String generateDataFile(String participantPrefix,  int numberOfParticipants){
		StringBuffer sb = new StringBuffer();
		for(int i = 0; i < numberOfParticipants; i++){
			String participantName = participantPrefix + i;
			sb.append(createNewLine(participantName));
			
		}
		
		return sb.toString();
	}
	

	public String generateDashboardTestPlan(int numberOfThreads, int rampUpTime, int loopCount, String drasHostName, int drasPort, String participantPassword, String dataFileName){
		StringBuffer sb = new StringBuffer();
		

		
		
		sb.append(createNewLine("<?xml version=\"1.0\" encoding=\"UTF-8\"?>"));
		sb.append(createNewLine("<jmeterTestPlan version=\"1.2\" properties=\"2.1\">"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<TestPlan guiclass=\"TestPlanGui\" testclass=\"TestPlan\" testname=\"Test Plan\" enabled=\"true\">"));
		sb.append(createNewLine("<stringProp name=\"TestPlan.comments\"></stringProp>"));
		sb.append(createNewLine("<boolProp name=\"TestPlan.functional_mode\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"TestPlan.serialize_threadgroups\">false</boolProp>"));
		sb.append(createNewLine("<elementProp name=\"TestPlan.user_defined_variables\" elementType=\"Arguments\" guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\"/>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"TestPlan.user_define_classpath\"></stringProp>"));
		sb.append(createNewLine("</TestPlan>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<ThreadGroup guiclass=\"ThreadGroupGui\" testclass=\"ThreadGroup\" testname=\"Thread Group\" enabled=\"true\">"));
		sb.append(createNewLine("<stringProp name=\"ThreadGroup.on_sample_error\">continue</stringProp>"));
		sb.append(createNewLine("<elementProp name=\"ThreadGroup.main_controller\" elementType=\"LoopController\" guiclass=\"LoopControlPanel\" testclass=\"LoopController\" testname=\"Loop Controller\" enabled=\"true\">"));
		sb.append(createNewLine("<boolProp name=\"LoopController.continue_forever\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"LoopController.loops\">"+ loopCount +"</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"ThreadGroup.num_threads\">"+ numberOfThreads +"</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"ThreadGroup.ramp_time\">"+ rampUpTime +"</stringProp>"));
		sb.append(createNewLine("<longProp name=\"ThreadGroup.start_time\">1300483582000</longProp>"));
		sb.append(createNewLine("<longProp name=\"ThreadGroup.end_time\">1300483582000</longProp>"));
		sb.append(createNewLine("<boolProp name=\"ThreadGroup.scheduler\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"ThreadGroup.duration\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"ThreadGroup.delay\"></stringProp>"));
		sb.append(createNewLine("</ThreadGroup>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<CookieManager guiclass=\"CookiePanel\" testclass=\"CookieManager\" testname=\"HTTP Cookie Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"CookieManager.cookies\"/>"));
		sb.append(createNewLine("<boolProp name=\"CookieManager.clearEachIteration\">true</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"CookieManager.policy\">rfc2109</stringProp>"));
		sb.append(createNewLine("</CookieManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<GenericController guiclass=\"LogicControllerGui\" testclass=\"GenericController\" testname=\"Simple Controller\" enabled=\"true\"/>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HTTPSampler guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSampler\" testname=\"/pss2.website/Login\" enabled=\"true\">"));
		sb.append(createNewLine("<elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\"/>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.domain\">${server}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.port\">${port} </stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.response_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.protocol\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.contentEncoding\">ISO-8859-1</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.path\">/pss2.website/Login</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.method\">GET</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.monitor\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>"));
		sb.append(createNewLine("</HTTPSampler>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"HeaderManager.headers\">"));
		sb.append(createNewLine("<elementProp name=\"Accept-Language\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Language</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">en-us,en;q=0.5</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Keep-Alive\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Keep-Alive</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">115</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"User-Agent\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">User-Agent</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Encoding\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Encoding</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">gzip,deflate</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Charset\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Charset</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</HeaderManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"49586\">200</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"469209355\">j_username</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"1951908560\">j_password</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<HTTPSampler guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSampler\" testname=\"/pss2.website/j_security_check\" enabled=\"true\">"));
		sb.append(createNewLine("<elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\">"));
		sb.append(createNewLine("<elementProp name=\"j_username\" elementType=\"HTTPArgument\">"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.always_encode\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">j_username</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">${USERID}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.use_equals\">true</boolProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"j_password\" elementType=\"HTTPArgument\">"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.always_encode\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">j_password</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">"+participantPassword+"</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.use_equals\">true</boolProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Submit\" elementType=\"HTTPArgument\">"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.always_encode\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">Submit</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">Login</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.use_equals\">true</boolProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.domain\">${server}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.port\">${port} </stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.response_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.protocol\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.path\">/pss2.website/j_security_check</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.method\">POST</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.monitor\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>"));
		sb.append(createNewLine("</HTTPSampler>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"HeaderManager.headers\">"));
		sb.append(createNewLine("<elementProp name=\"Content-Type\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Content-Type</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">application/x-www-form-urlencoded</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Language\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Language</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">en-us,en;q=0.5</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Keep-Alive\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Keep-Alive</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">115</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"User-Agent\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">User-Agent</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Referer\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Referer</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">http://localhost:8080/pss2.website/Login</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Encoding\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Encoding</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">gzip,deflate</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Charset\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Charset</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</HeaderManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"49586\">200</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<HTTPSampler guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSampler\" testname=\"/pss2.website/Login\" enabled=\"true\">"));
		sb.append(createNewLine("<elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\"/>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.domain\">${server}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.port\">${port} </stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.response_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.protocol\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.contentEncoding\">ISO-8859-1</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.path\">/pss2.website/Login</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.method\">GET</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.monitor\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>"));
		sb.append(createNewLine("</HTTPSampler>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"HeaderManager.headers\">"));
		sb.append(createNewLine("<elementProp name=\"Accept-Language\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Language</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">en-us,en;q=0.5</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Keep-Alive\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Keep-Alive</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">115</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"User-Agent\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">User-Agent</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Referer\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Referer</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">http://localhost:8080/pss2.website/Login</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Encoding\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Encoding</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">gzip,deflate</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Charset\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Charset</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</HeaderManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"49586\">200</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<HTTPSampler guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSampler\" testname=\"/facdash/jsp/simpleDashboard.jsf\" enabled=\"true\">"));
		sb.append(createNewLine("<elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\"/>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.domain\">${server}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.port\">${port} </stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.response_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.protocol\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.path\">/facdash/jsp/simpleDashboard.jsf</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.method\">GET</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.monitor\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>"));
		sb.append(createNewLine("</HTTPSampler>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"HeaderManager.headers\">"));
		sb.append(createNewLine("<elementProp name=\"Accept-Language\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Language</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">en-us,en;q=0.5</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Keep-Alive\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Keep-Alive</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">115</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"User-Agent\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">User-Agent</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Encoding\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Encoding</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">gzip,deflate</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Charset\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Charset</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</HeaderManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"49586\">200</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"1793121917\">Weather for</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"-1004467028\">Today&apos;s Events</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"952112046\">Today&apos;s Usage</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"-455685536\">${USERID}</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_data</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<HTTPSampler guiclass=\"HttpTestSampleGui\" testclass=\"HTTPSampler\" testname=\"/pss2.website/logout.do\" enabled=\"true\">"));
		sb.append(createNewLine("<elementProp name=\"HTTPsampler.Arguments\" elementType=\"Arguments\" guiclass=\"HTTPArgumentsPanel\" testclass=\"Arguments\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\">"));
		sb.append(createNewLine("<elementProp name=\"uid\" elementType=\"HTTPArgument\">"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.always_encode\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">uid</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">-107e7ba7%3A12ec9fda955%3A38ca</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPArgument.use_equals\">true</boolProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.domain\">${server}</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.port\">${port} </stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.connect_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.response_timeout\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.protocol\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.contentEncoding\"></stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.path\">/pss2.website/logout.do</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.method\">GET</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.follow_redirects\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.auto_redirects\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.use_keepalive\">true</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.DO_MULTIPART_POST\">false</boolProp>"));
		sb.append(createNewLine("<boolProp name=\"HTTPSampler.monitor\">false</boolProp>"));
		sb.append(createNewLine("<stringProp name=\"HTTPSampler.embedded_url_re\"></stringProp>"));
		sb.append(createNewLine("</HTTPSampler>"));
		sb.append(createNewLine("<hashTree>"));
		sb.append(createNewLine("<HeaderManager guiclass=\"HeaderPanel\" testclass=\"HeaderManager\" testname=\"HTTP Header Manager\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"HeaderManager.headers\">"));
		sb.append(createNewLine("<elementProp name=\"Accept-Language\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Language</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">en-us,en;q=0.5</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Keep-Alive\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Keep-Alive</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">115</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"User-Agent\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">User-Agent</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.2.6) Gecko/20100625 Firefox/3.6.6</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Referer\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Referer</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">http://localhost:8080/pss2.utility/clients.jsf?uid=-107e7ba7:12ec9fda955:38ca</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Encoding\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Encoding</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">gzip,deflate</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"Accept-Charset\" elementType=\"Header\">"));
		sb.append(createNewLine("<stringProp name=\"Header.name\">Accept-Charset</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Header.value\">ISO-8859-1,utf-8;q=0.7,*;q=0.7</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</HeaderManager>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResponseAssertion guiclass=\"AssertionGui\" testclass=\"ResponseAssertion\" testname=\"Response Assertion\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Asserion.test_strings\">"));
		sb.append(createNewLine("<stringProp name=\"49586\">200</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<stringProp name=\"Assertion.test_field\">Assertion.response_code</stringProp>"));
		sb.append(createNewLine("<boolProp name=\"Assertion.assume_success\">false</boolProp>"));
		sb.append(createNewLine("<intProp name=\"Assertion.test_type\">2</intProp>"));
		sb.append(createNewLine("</ResponseAssertion>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<ResultCollector guiclass=\"ViewResultsFullVisualizer\" testclass=\"ResultCollector\" testname=\"View Results Tree\" enabled=\"true\">"));
		sb.append(createNewLine("<boolProp name=\"ResultCollector.error_logging\">false</boolProp>"));
		sb.append(createNewLine("<objProp>"));
		sb.append(createNewLine("<name>saveConfig</name>"));
		sb.append(createNewLine("<value class=\"SampleSaveConfiguration\">"));
		sb.append(createNewLine("<time>true</time>"));
		sb.append(createNewLine("<latency>true</latency>"));
		sb.append(createNewLine("<timestamp>true</timestamp>"));
		sb.append(createNewLine("<success>true</success>"));
		sb.append(createNewLine("<label>true</label>"));
		sb.append(createNewLine("<code>true</code>"));
		sb.append(createNewLine("<message>true</message>"));
		sb.append(createNewLine("<threadName>true</threadName>"));
		sb.append(createNewLine("<dataType>true</dataType>"));
		sb.append(createNewLine("<encoding>false</encoding>"));
		sb.append(createNewLine("<assertions>true</assertions>"));
		sb.append(createNewLine("<subresults>true</subresults>"));
		sb.append(createNewLine("<responseData>false</responseData>"));
		sb.append(createNewLine("<samplerData>false</samplerData>"));
		sb.append(createNewLine("<xml>true</xml>"));
		sb.append(createNewLine("<fieldNames>false</fieldNames>"));
		sb.append(createNewLine("<responseHeaders>false</responseHeaders>"));
		sb.append(createNewLine("<requestHeaders>false</requestHeaders>"));
		sb.append(createNewLine("<responseDataOnError>false</responseDataOnError>"));
		sb.append(createNewLine("<saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>"));
		sb.append(createNewLine("<assertionsResultsToSave>0</assertionsResultsToSave>"));
		sb.append(createNewLine("<bytes>true</bytes>"));
		sb.append(createNewLine("</value>"));
		sb.append(createNewLine("</objProp>"));
		sb.append(createNewLine("<stringProp name=\"filename\"></stringProp>"));
		sb.append(createNewLine("</ResultCollector>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<ResultCollector guiclass=\"StatVisualizer\" testclass=\"ResultCollector\" testname=\"Aggregate Report\" enabled=\"true\">"));
		sb.append(createNewLine("<boolProp name=\"ResultCollector.error_logging\">false</boolProp>"));
		sb.append(createNewLine("<objProp>"));
		sb.append(createNewLine("<name>saveConfig</name>"));
		sb.append(createNewLine("<value class=\"SampleSaveConfiguration\">"));
		sb.append(createNewLine("<time>true</time>"));
		sb.append(createNewLine("<latency>true</latency>"));
		sb.append(createNewLine("<timestamp>true</timestamp>"));
		sb.append(createNewLine("<success>true</success>"));
		sb.append(createNewLine("<label>true</label>"));
		sb.append(createNewLine("<code>true</code>"));
		sb.append(createNewLine("<message>true</message>"));
		sb.append(createNewLine("<threadName>true</threadName>"));
		sb.append(createNewLine("<dataType>true</dataType>"));
		sb.append(createNewLine("<encoding>false</encoding>"));
		sb.append(createNewLine("<assertions>true</assertions>"));
		sb.append(createNewLine("<subresults>true</subresults>"));
		sb.append(createNewLine("<responseData>false</responseData>"));
		sb.append(createNewLine("<samplerData>false</samplerData>"));
		sb.append(createNewLine("<xml>true</xml>"));
		sb.append(createNewLine("<fieldNames>false</fieldNames>"));
		sb.append(createNewLine("<responseHeaders>false</responseHeaders>"));
		sb.append(createNewLine("<requestHeaders>false</requestHeaders>"));
		sb.append(createNewLine("<responseDataOnError>false</responseDataOnError>"));
		sb.append(createNewLine("<saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>"));
		sb.append(createNewLine("<assertionsResultsToSave>0</assertionsResultsToSave>"));
		sb.append(createNewLine("<bytes>true</bytes>"));
		sb.append(createNewLine("</value>"));
		sb.append(createNewLine("</objProp>"));
		sb.append(createNewLine("<stringProp name=\"filename\"></stringProp>"));
		sb.append(createNewLine("</ResultCollector>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("<UserParameters guiclass=\"UserParametersGui\" testclass=\"UserParameters\" testname=\"User Parameters\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"UserParameters.names\">"));
		sb.append(createNewLine("<stringProp name=\"-1782700506\">USERID</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<collectionProp name=\"UserParameters.thread_values\">"));
		sb.append(createNewLine("<collectionProp name=\"1288292938\">"));
		sb.append(createNewLine("<stringProp name=\"285685370\">${_StringFromFile(" + dataFileName + ")}</stringProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("<boolProp name=\"UserParameters.per_iteration\">true</boolProp>"));
		sb.append(createNewLine("</UserParameters>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("<Arguments guiclass=\"ArgumentsPanel\" testclass=\"Arguments\" testname=\"User Defined Variables\" enabled=\"true\">"));
		sb.append(createNewLine("<collectionProp name=\"Arguments.arguments\">"));
		sb.append(createNewLine("<elementProp name=\"server\" elementType=\"Argument\">"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">server</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">" + drasHostName + "</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"port\" elementType=\"Argument\">"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">port</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">" + drasPort + "</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("<elementProp name=\"protocol\" elementType=\"Argument\">"));
		sb.append(createNewLine("<stringProp name=\"Argument.name\">protocol</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.value\">http</stringProp>"));
		sb.append(createNewLine("<stringProp name=\"Argument.metadata\">=</stringProp>"));
		sb.append(createNewLine("</elementProp>"));
		sb.append(createNewLine("</collectionProp>"));
		sb.append(createNewLine("</Arguments>"));
		sb.append(createNewLine("<hashTree/>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("</hashTree>"));
		sb.append(createNewLine("</jmeterTestPlan>"));
		
		
		

		
		
		
		
		
		
		return sb.toString();
	}

}
