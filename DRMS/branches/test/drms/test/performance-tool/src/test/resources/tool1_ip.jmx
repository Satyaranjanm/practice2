<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Web Service Tests" enabled="true">
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <longProp name="ThreadGroup.start_time">1269467587000</longProp>
        <longProp name="ThreadGroup.end_time">1269467587000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">SOAP</stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetEventStates_Controller" enabled="true"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">http://192.168.150.22</stringProp>
                <stringProp name="Authorization.username">test.test</stringProp>
                <stringProp name="Authorization.password">Test_1234</stringProp>
                <stringProp name="Authorization.domain">/</stringProp>
                <stringProp name="Authorization.realm">PSS2WS</stringProp>
              </elementProp>
            </collectionProp>
          </AuthManager>
          <hashTree/>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="GetEventStates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.150.22</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">SOAPClientWS/nossl/soap2</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://openadr.lbl.gov/src/1/DRASClientSOAP.wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">GetEventStates</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:dras=&quot;http://www.openadr.org/DRAS/DRASClientSOAP/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;dras:GetEventStates&gt;
         &lt;empty&gt;?&lt;/empty&gt;
      &lt;/dras:GetEventStates&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//faultstring</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Extract_ID" enabled="true">
            <stringProp name="XPathExtractor.default">2092925224</stringProp>
            <stringProp name="XPathExtractor.refname">EVENT_STATE_ID</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//eventStates/@eventStateID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SetEventStateConfirmation_Controller" enabled="true"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">http://192.168.150.22</stringProp>
                <stringProp name="Authorization.username">test.test</stringProp>
                <stringProp name="Authorization.password">Test_1234</stringProp>
                <stringProp name="Authorization.domain">/</stringProp>
                <stringProp name="Authorization.realm">PSS2WS</stringProp>
              </elementProp>
            </collectionProp>
          </AuthManager>
          <hashTree/>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SetEventStateConfirmation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.150.22</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">SOAPClientWS/nossl/soap2</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://openadr.lbl.gov/src/1/DRASClientSOAP.wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">SetEventStateConfirmation</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:dras=&quot;http://www.openadr.org/DRAS/DRASClientSOAP/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
&lt;dras:SetEventStateConfirmation&gt;
         &lt;eventStateConfirmation programName=&quot;RTP Agricultural&quot; eventModNumber=&quot;0&quot; eventIdentifier=&quot;&quot; drasClientID=&quot;test.test&quot; eventStateID=&quot;${EVENT_STATE_ID}&quot; schemaVersion=&quot;&quot; operationModeValue=&quot;NORMAL&quot; optInStatus=&quot;true&quot; currentTime=&quot;11.0&quot; /&gt;
      &lt;/dras:SetEventStateConfirmation&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;


</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//faultstring</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="GetEventStates_Controller" enabled="true"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">http://192.168.150.22</stringProp>
                <stringProp name="Authorization.username">test1.test1</stringProp>
                <stringProp name="Authorization.password">Test_1234</stringProp>
                <stringProp name="Authorization.domain">/</stringProp>
                <stringProp name="Authorization.realm">PSS2WS</stringProp>
              </elementProp>
            </collectionProp>
          </AuthManager>
          <hashTree/>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="GetEventStates" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.150.22</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">SOAPClientWS/nossl/soap2</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://openadr.lbl.gov/src/1/DRASClientSOAP.wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">GetEventStates</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:dras=&quot;http://www.openadr.org/DRAS/DRASClientSOAP/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
      &lt;dras:GetEventStates&gt;
         &lt;empty&gt;?&lt;/empty&gt;
      &lt;/dras:GetEventStates&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//faultstring</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Extract_ID" enabled="true">
            <stringProp name="XPathExtractor.default">2092925224</stringProp>
            <stringProp name="XPathExtractor.refname">EVENT_STATE_ID</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//eventStates/@eventStateID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="SetEventStateConfirmation_Controller" enabled="true"/>
        <hashTree>
          <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
            <collectionProp name="AuthManager.auth_list">
              <elementProp name="" elementType="Authorization">
                <stringProp name="Authorization.url">http://192.168.150.22</stringProp>
                <stringProp name="Authorization.username">test1.test1</stringProp>
                <stringProp name="Authorization.password">Test_1234</stringProp>
                <stringProp name="Authorization.domain">/</stringProp>
                <stringProp name="Authorization.realm">PSS2WS</stringProp>
              </elementProp>
            </collectionProp>
          </AuthManager>
          <hashTree/>
          <WebServiceSampler guiclass="WebServiceSamplerGui" testclass="WebServiceSampler" testname="SetEventStateConfirmation" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">192.168.150.22</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.path">SOAPClientWS/nossl/soap2</stringProp>
            <stringProp name="WebserviceSampler.wsdl_url">http://openadr.lbl.gov/src/1/DRASClientSOAP.wsdl</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <stringProp name="Soap.Action">SetEventStateConfirmation</stringProp>
            <stringProp name="HTTPSamper.xml_data">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:dras=&quot;http://www.openadr.org/DRAS/DRASClientSOAP/&quot;&gt;
   &lt;soapenv:Header/&gt;
   &lt;soapenv:Body&gt;
&lt;dras:SetEventStateConfirmation&gt;
         &lt;eventStateConfirmation programName=&quot;RTP Agricultural&quot; eventModNumber=&quot;0&quot; eventIdentifier=&quot;&quot; drasClientID=&quot;test1.test1&quot; eventStateID=&quot;${EVENT_STATE_ID}&quot; schemaVersion=&quot;&quot; operationModeValue=&quot;NORMAL&quot; optInStatus=&quot;true&quot; currentTime=&quot;11.0&quot; /&gt;
      &lt;/dras:SetEventStateConfirmation&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;


</stringProp>
            <stringProp name="WebServiceSampler.xml_data_file"></stringProp>
            <stringProp name="WebServiceSampler.xml_path_loc"></stringProp>
            <stringProp name="WebserviceSampler.timeout"></stringProp>
            <stringProp name="WebServiceSampler.memory_cache">true</stringProp>
            <stringProp name="WebServiceSampler.read_response">true</stringProp>
            <stringProp name="WebServiceSampler.use_proxy">false</stringProp>
            <stringProp name="WebServiceSampler.proxy_host"></stringProp>
            <stringProp name="WebServiceSampler.proxy_port"></stringProp>
          </WebServiceSampler>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//faultstring</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename">C:\akua_docs\jmeter\agg_results.xml</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename">C:\akua_docs\jmeter\results</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
