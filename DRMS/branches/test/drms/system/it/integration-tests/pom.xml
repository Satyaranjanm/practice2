<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>it-parent</artifactId>
		<groupId>com.akuacom.drms.it</groupId>
		<version>7.26-SNAPSHOT</version>
	</parent>
	<groupId>com.akuacom.drms.it</groupId>
	<artifactId>integration-tests</artifactId>
	<version>7.26-SNAPSHOT</version>

	<!-- ************************************************************** Wondering
		why you can't import this project into Eclipse as a Java project? Wish you
		could edit and debug in a proper IDE? Like most things, it's a simple matter
		of a tiny little obscure secret. Before importing this maven project into
		eclipse, temporarily change the packaging from "pom" to "jar". -->
	<packaging>pom</packaging>

	<!-- Then import the maven project into eclipse. then change the packaging
		back to "pom" so the system tests will run properly. *************************************************************** -->

	<name>integration-tests</name>
	<description>Integration test launcher.</description>
	<dependencies>
		<dependency>
			<groupId>com.akuacom.drms.test</groupId>
			<artifactId>event-validator</artifactId>
		</dependency>

		<!-- libraries -->
		<dependency>
			<groupId>com.akuacom.drms.ws-client</groupId>
			<artifactId>ads-client</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.ws</groupId>
			<artifactId>bacnet-stub</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.core</groupId>
			<artifactId>drms-core</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.core</groupId>
			<artifactId>drms-core-ejb</artifactId>
			<type>ejb</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.obix</groupId>
			<artifactId>obix</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.ws-client</groupId>
			<artifactId>oasis-client</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.ws-client</groupId>
			<artifactId>ieso-client</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.lib</groupId>
			<artifactId>drms-util</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.ws</groupId>
			<artifactId>util-op-stub</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.lib</groupId>
			<artifactId>util-op-common</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.common</groupId>
			<artifactId>util</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.common</groupId>
			<artifactId>util-ejb</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.akuacom.common</groupId>
			<artifactId>util</artifactId>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>com.akuacom.common</groupId>
			<artifactId>util-ejb</artifactId>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.lib</groupId>
			<artifactId>drms-util</artifactId>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.core</groupId>
			<artifactId>drms-core</artifactId>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>com.akuacom.drms.core</groupId>
			<artifactId>drms-core-ejb</artifactId>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-chain</groupId>
			<artifactId>commons-chain</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.richfaces.framework</groupId>
			<artifactId>richfaces-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.richfaces.framework</groupId>
			<artifactId>richfaces-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jfreechart</artifactId>
		</dependency>
		<dependency>
			<groupId>jfree</groupId>
			<artifactId>jcommon</artifactId>
		</dependency>
		<!--TODO JB5 remove and depend on explicit stuff <dependency> <groupId>org.jboss.client</groupId>
			<artifactId>jbossall-client</artifactId> </dependency> -->
		<!-- explicitely adding client deps -->
		<!--<dependency> <groupId>org.jboss</groupId> <artifactId>jboss-jaxws-jboss</artifactId>
			</dependency> -->
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jbosssx-as-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.naming</groupId>
			<artifactId>jnp-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.security</groupId>
			<artifactId>jbosssx-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.security</groupId>
			<artifactId>jboss-security-spi-bare</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss.logging</groupId>
			<artifactId>jboss-logging-log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-remoting</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-aop-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-aspect-jdk50-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>concurrent</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-javaee</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-integration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb3-security-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb3-proxy-spi-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb3-proxy-impl-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb3-core-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jboss-ejb3-common-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.4.2</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- This should bind by default, but it doesn't. Making an explicit binding
				as a work around -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>test-resources</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testResources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/apt</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>integrationTest</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<wait>false</wait>
							<container>
								<systemProperties>
									<JAVA_OPTS>${jbossJavaOpts}</JAVA_OPTS>
									<PSS2_OP_EMAILS>${pss2OpEmails}</PSS2_OP_EMAILS>
									<akuacomEmailOnly>${akuaEmailOnly}</akuacomEmailOnly>
									<DRMS_ENV>${drmsEnv}</DRMS_ENV>
								</systemProperties>
							</container>
						</configuration>
						<executions>
							<execution>
								<id>start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>deploy</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>coverage</id>
			<dependencies>
				<dependency>
					<groupId>com.cenqua.clover</groupId>
					<artifactId>clover</artifactId>
					<version>3.0.2</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<configuration>
									<tasks>
										<copy file="${settings.localRepository}/com/cenqua/clover/clover/3.0.2/clover-3.0.2.jar" todir="${jbossServerConfig}/lib" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
