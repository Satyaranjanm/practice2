    <!-- A template configuration for the web-console web application. This
      defaults to the UsersRolesLoginModule the same as other and should be
      changed to a stronger authentication mechanism as required.
    -->
    <application-policy name = "accmgr">
       <authentication>
          <login-module code="org.jboss.security.auth.spi.UsersRolesLoginModule"
             flag = "required">
             <module-option name="usersProperties">users.properties</module-option>
             <module-option name="rolesProperties">roles.properties</module-option>
          </login-module>
     </authentication>
    </application-policy>

    <application-policy name = "other">
       <!-- A simple server login module, which can be used when the number 
       of users is relatively small. It uses two properties files:
       users.properties, which holds users (key) and their password (value).
       roles.properties, which holds users (key) and a comma-separated list of
       their roles (value).
       The unauthenticatedIdentity property defines the name of the principal
       that will be used when a null username and password are presented as is
       the case for an unuathenticated web client or MDB. If you want to
       allow such users to be authenticated add the property, e.g.,
       unauthenticatedIdentity="nobody"
       <authentication>
          <login-module code = "org.jboss.security.auth.spi.UsersRolesLoginModule"
             flag = "required" />
       </authentication>
	-->       
	<!-- custom log in module -->
       <authentication>
          <login-module code = "org.jboss.security.ClientLoginModule" flag = "required" >
	    <module-option name="paswword-stacking">useFirstPass</module-option>
        </login-module>
        <login-module code = "com.akuacom.accmgr.wsclient.AccountManagerServerLoginModule"
             flag = "required" >
          		<module-option name="domainName">.</module-option>
        	</login-module>
       </authentication>
    </application-policy>
